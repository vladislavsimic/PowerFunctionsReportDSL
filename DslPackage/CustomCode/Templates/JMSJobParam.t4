<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".txt" #>
<#@ PowerFunctionsReportDSL processor="PowerFunctionsReportDSLDirectiveProcessor" requires="fileName='Sample.ui'"  #>
<#@ parameter name="delimiter" type="System.String" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode.Converters" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode.Model" #>
<#@ import namespace="System.Collections.Generic" #>

<#
  // Create a file segment for each element:
   foreach (ModelType type in this.ModelRoot.Types)
   { 
	   if(type is DataGrid)
	   {
		    DataGrid dg = type as DataGrid;
            if(!dg.ShouldGenerate) continue;
            string functionName = this.ModelRoot.Name;
    // First item is the delimiter:
#>
<#= string.Format(delimiter, functionName) #>
//###############################################################
//														        #
//	This code was generated by a PowerFunctionsReportDSL tool.	#
//	Changes to this file may cause incorrect behavior	        #
//	and will be lost if the code is regenerated.		        #
//														        #
//###############################################################
<#
    JMSJobParam job = new JMSJobParam(dg);
    job.ObtainCode();
    Dictionary<string, string> code = job.GeneratedCode;
#>

<#=code["usings"]#>

namespace <#=code["classNamespace"]#>
{

<#=code["dataContract"]#>
    public partial class <#=functionName#>ReportJobParam<#=code["superclass"]#>
    {
        #region Properties

<#=code["attributes"]#>

        #endregion Properties

    }
}
<#
            break;
	   }
   }
#>