<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".txt" #>
<#@ PowerFunctionsReportDSL processor="PowerFunctionsReportDSLDirectiveProcessor" requires="fileName='Sample.ui'"  #>
<#@ parameter name="delimiter" type="System.String" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode.Converters" #>
<#@ import namespace="SchneiderElectricDMS.PowerFunctionsReportDSL.CustomCode.Helpers " #>
<#
  // Create a file segment for each element:
   foreach (ModelType type in this.ModelRoot.Types)
   { 
	   if(type is SchneiderElectricDMS.PowerFunctionsReportDSL.Enum)
	   {
		    SchneiderElectricDMS.PowerFunctionsReportDSL.Enum enumClass = type as SchneiderElectricDMS.PowerFunctionsReportDSL.Enum;
            if(!enumClass.ShouldGenerate) continue;

    // First item is the delimiter:
#>
<#= string.Format(delimiter, type.Name) #>
//###############################################################
//														        #
//	This code was generated by a PowerFunctionsReportDSL tool.	#
//	Changes to this file may cause incorrect behavior	        #
//	and will be lost if the code is regenerated.		        #
//														        #
//###############################################################

<#
    string classNamespace = "TelventDMS.Services.JobManagerService." + this.ModelRoot.Name + "Report";
    string enumAttributes = JMSHelper.GetJMSEnumAttributes(enumClass);

#> 
namespace <#=classNamespace#>
{

    public enum <#=enumClass.Name#>
    {
<#=enumAttributes#>        
    }
}
<#
	   }
   }
#>